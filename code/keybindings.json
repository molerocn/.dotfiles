[
  // explorer -----------------------------------------------------------------
  { "key": "a", "command": "explorer.newFile", "when": "filesExplorerFocus && !inputFocus" },
  { "key": "r", "command": "renameFile", "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
  { "key": "ctrl+b", "command": "-extension.vim_ctrl+b", "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'" },

  // suggestion mappings ------------------------------------------------------
  { "key": "ctrl+y", "command": "-extension.vim_ctrl+y", "when": "editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl" },
  { "key": "ctrl+y", "command": "-redo" },
  { "key": "enter", "command": "-acceptSelectedSuggestion", "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus" },
  { "key": "tab", "command": "-acceptSelectedSuggestion", "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus" },
  {
    "key": "tab",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  { "key": "ctrl+p", "command": "selectPrevSuggestion", "when": "editorTextFocus && suggestWidgetVisible" },
  { "key": "ctrl+p", "command": "selectPrevCodeAction", "when": "codeActionMenuVisible" },
  { "key": "ctrl+n", "command": "selectNextSuggestion", "when": "editorTextFocus && suggestWidgetVisible" },
  { "key": "ctrl+n", "command": "selectNextCodeAction", "when": "codeActionMenuVisible" },

  // navigate between panels --------------------------------------------------
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.clear",
    "when": "hasChatProvider && inChat"
  },
  { "key": "ctrl+shift+l", "command": "workbench.action.navigateRight", "when": "!panelFocus" },

  // open ---------------------------------------------------------------------
  // settings JSON
  { "key": "ctrl+,", "command": "-workbench.action.openSettings" },
  { "key": "ctrl+,", "command": "workbench.action.openSettingsJson" },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen",
    "when": "!inQuickOpen && !panelFocus && !suggestWidgetVisible && !codeActionMenuVisible"
  },
  { "key": "ctrl+p", "command": "workbench.action.quickOpenSelectPrevious", "when": "inQuickOpen" },
  { "key": "ctrl+n", "command": "workbench.action.quickOpenSelectNext", "when": "inQuickOpen" },
  { "key": "ctrl+u", "command": "editor.action.selectAll", "when": "inQuickOpen" },

  // navigate back and forward ------------------------------------------------
  { "key": "ctrl+alt+-", "command": "-workbench.action.navigateBack", "when": "canNavigateBack" },
  { "key": "ctrl+shift+]", "command": "workbench.action.navigateBack", "when": "canNavigateBack" },
  { "key": "ctrl+shift+-", "command": "-workbench.action.navigateForward", "when": "canNavigateForward" },
  { "key": "ctrl+alt+]", "command": "workbench.action.navigateForward", "when": "canNavigateForward" },

  // tabs ---------------------------------------------------------------------
  { "key": "ctrl+shift+,", "command": "workbench.action.moveEditorLeftInGroup" },
  { "key": "ctrl+shift+.", "command": "workbench.action.moveEditorRightInGroup" },
  { "key": "ctrl+shift+l", "command": "-editor.action.selectHighlights", "when": "editorFocus" },
  { "key": "ctrl+shift+l", "command": "-addCursorsAtSearchResults", "when": "fileMatchOrMatchFocus && searchViewletVisible" },
  { "key": "ctrl+shift+l", "command": "-selectAllSearchEditorMatches", "when": "inSearchEditor" },
  { "key": "ctrl+shift+l", "command": "workbench.action.closeEditorsToTheRight" }, 
  { "key": "shift+alt+t", "command": "workbench.action.closeOtherEditors" },
  // {
  //   "key": "ctrl+tab",
  //   "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
  //   "when": "!activeEditorGroupEmpty"
  // },
  // {
  //   "key": "ctrl+shift+tab",
  //   "command": "-workbench.action.quickOpenNextRecentlyUsedEditorInGroup",
  //   "when": "!activeEditorGroupEmpty"
  // },

  // copilot
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },

  // notebook -----------------------------------------------------------------
  { "key": "ctrl+shift+h", "command": "-workbench.action.replaceInFiles" },
  { "key": "ctrl+shift+h", "command": "notebook.cell.quitEdit", "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible" },
  { "key": "ctrl+shift+z", "command": "notebook.centerActiveCell", "when": "notebookEditorFocused" },
  { "key": "ctrl+shift+z", "command": "-redo" },

  // save all -----------------------------------------------------------------
  { "key": "ctrl+s", "command": "-workbench.action.files.save" },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  { "key": "ctrl+w", "command": "-workbench.action.closeGroup", "when": "activeEditorGroupEmpty && multipleEditorGroups" },
  { "key": "ctrl+w", "command": "-workbench.action.terminal.killEditor", "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+shift+w", "command": "-workbench.action.closeWindow" },
  { "key": "ctrl+shift+w", "command": "workbench.action.closeActiveEditor" },

  // disable zoom keymaps -----------------------------------------------------
  { "key": "ctrl+-", "command": "-workbench.action.zoomOut" },
  { "key": "ctrl+=", "command": "-workbench.action.zoomIn" },
  { "key": "ctrl+9", "command": "-workbench.action.zoomIn" },

  // cancel actions with ctrl + c ---------------------------------------------
  {
    "key": "ctrl+c",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "ctrl+c",
    "command": "hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+c",
    "command": "search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+c",
    "command": "editor.cancelOperation",
    "when": "cancellableOperation"
  },
  {
    "key": "ctrl+c",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "ctrl+shift+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+[",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "shift+f8",
    "command": "-editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+w",
    "command": "workbench.action.closeAllGroups"
  },
  {
    "key": "ctrl+k ctrl+shift+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+w",
    "command": "workbench.files.action.collapseExplorerFolders"
  },
  {
    "key": "ctrl+f",
    "command": "-workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+escape",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
  },
  {
    "key": "ctrl+]",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus && !codeActionMenuVisible && !quickOpen && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+alt+t",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+8",
    "command": "-workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+oem_2",
    "command": "terminal.focus"
  },
  {
    "key": "alt+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+e",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  // serie of commands first toggle sidebar and then git.commit
  {
    "key": "alt+c",
    "command": "runCommands",
    "args": {
      "commands": [
        // "workbench.action.closeSidebar",
        "git.commit",
      ]
    },
  },
  {
    "key": "alt+shift+c",
    "command": "runCommands",
    "args": {
      "commands": [
        // "workbench.action.closeSidebar",
        "git.stageAll",
        "git.commit",
      ]
    }
  },
  {
    "key": "ctrl+shift+a",
    "command": "git.stageAll"
  },
  {
    "key": "ctrl+alt+c",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "alt+e",
    "command": "workbench.view.explorer",
  },
  {
    "key": "enter",
    "command": "runCommands",
    "args": {
      "commands": [
        "explorer.openAndPassFocus",
        "workbench.action.closeSidebar",
      ]
    },
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-explorer.openAndPassFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+s",
    "command": "extension.vim_ctrl+s"
  },
  // {
  //   "key": "ctrl+s",
  //   "command": "-extension.vim_ctrl+s",
  //   "when": "editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"
  // },
  // {
  //   "key": "ctrl+s",
  //   "command": "runCommands",
  //   "args": {
  //     "commands": [
  //       "saveAll"
  //     ]
  //   }
  // },
  {
    "key": "ctrl+k ctrl+pageup",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
  },

  // harpoon navigation
  // {
  //   "key": "ctrl+h",
  //   "command": "runCommands",
  //   "args":{
  //     "commands": [
  //       "extension.vim_ctrl+c",
  //       "workbench.action.openEditorAtIndex1"
  //     ],
  //   },
  //   "when": "editorFocus && !suggestWidgetVisible"
  // },
  // {
  //   "key": "ctrl+t",
  //   "command": "runCommands",
  //   "args":{
  //     "commands": [
  //       "extension.vim_ctrl+c",
  //       "workbench.action.openEditorAtIndex2"
  //     ],
  //   },
  //   "when": "editorFocus && !suggestWidgetVisible"
  // },
  // {
  //   "key": "ctrl+n",
  //   "command": "runCommands",
  //   "args":{
  //     "commands": [
  //       "extension.vim_ctrl+c",
  //       "workbench.action.openEditorAtIndex3"
  //     ],
  //   },
  //   "when": "editorFocus && !suggestWidgetVisible"
  // },
  // {
  //   "key": "ctrl+m",
  //   "command": "runCommands",
  //   "args":{
  //     "commands": [
  //       "extension.vim_ctrl+c",
  //       "workbench.action.openEditorAtIndex4"
  //     ],
  //   },
  //   "when": "editorFocus && !suggestWidgetVisible"
  // },
  {
    "key": "ctrl+meta+y",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+s",
    "command": "runCommands",
    "args":{
      "commands": [
        "extension.vim_ctrl+c",
        "saveAll"
      ],
    },
  },
  {
    "key": "ctrl+j",
    "command": "references-view.next",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "ctrl+k",
    "command": "references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+y",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "d",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+f",
    "command": "projectManager.listProjects"
  },
  {
    "key": "shift+alt+p",
    "command": "-projectManager.listProjects"
  },
  {
    "key": "ctrl+oem_2",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.terminal.goToRecentDirectory",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "runCommands",
    "args":{
      "commands": [
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.closePanel"
      ],
    },
  },
  {
    "key": "ctrl+oem_3",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  }
]
